{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public._prisma_migrations": {
      "name": "_prisma_migrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(36)",
          "primaryKey": true,
          "notNull": true
        },
        "checksum": {
          "name": "checksum",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "finished_at": {
          "name": "finished_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "migration_name": {
          "name": "migration_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "logs": {
          "name": "logs",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rolled_back_at": {
          "name": "rolled_back_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "applied_steps_count": {
          "name": "applied_steps_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.spatial_ref_sys": {
      "name": "spatial_ref_sys",
      "schema": "",
      "columns": {
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "auth_name": {
          "name": "auth_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "auth_srid": {
          "name": "auth_srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srtext": {
          "name": "srtext",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        },
        "proj4text": {
          "name": "proj4text",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "spatial_ref_sys_srid_check": {
          "name": "spatial_ref_sys_srid_check",
          "value": "(srid > 0) AND (srid <= 998999)"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.User": {
      "name": "User",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "User_email_key": {
          "name": "User_email_key",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ProviderProfile": {
      "name": "ProviderProfile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "yearsOfExperience": {
          "name": "yearsOfExperience",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "serviceLocationType": {
          "name": "serviceLocationType",
          "type": "ServicesLocation",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "locationId": {
          "name": "locationId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ProviderProfile_locationId_idx": {
          "name": "ProviderProfile_locationId_idx",
          "columns": [
            {
              "expression": "locationId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ProviderProfile_locationId_key": {
          "name": "ProviderProfile_locationId_key",
          "columns": [
            {
              "expression": "locationId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ProviderProfile_userId_key": {
          "name": "ProviderProfile_userId_key",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ProviderProfile_userId_fkey": {
          "name": "ProviderProfile_userId_fkey",
          "tableFrom": "ProviderProfile",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "ProviderProfile_locationId_fkey": {
          "name": "ProviderProfile_locationId_fkey",
          "tableFrom": "ProviderProfile",
          "tableTo": "Location",
          "schemaTo": "public",
          "columnsFrom": [
            "locationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Location": {
      "name": "Location",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "coordinates": {
          "name": "coordinates",
          "type": "geography",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ProviderService": {
      "name": "ProviderService",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "providerProfileId": {
          "name": "providerProfileId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "serviceId": {
          "name": "serviceId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "priceFrom": {
          "name": "priceFrom",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "priceTo": {
          "name": "priceTo",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "isAvailable": {
          "name": "isAvailable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "ProviderService_providerProfileId_serviceId_key": {
          "name": "ProviderService_providerProfileId_serviceId_key",
          "columns": [
            {
              "expression": "providerProfileId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            },
            {
              "expression": "serviceId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ProviderService_providerProfileId_fkey": {
          "name": "ProviderService_providerProfileId_fkey",
          "tableFrom": "ProviderService",
          "tableTo": "ProviderProfile",
          "schemaTo": "public",
          "columnsFrom": [
            "providerProfileId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "ProviderService_serviceId_fkey": {
          "name": "ProviderService_serviceId_fkey",
          "tableFrom": "ProviderService",
          "tableTo": "Service",
          "schemaTo": "public",
          "columnsFrom": [
            "serviceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Service": {
      "name": "Service",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Service_name_key": {
          "name": "Service_name_key",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.VeterinarianDetails": {
      "name": "VeterinarianDetails",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "providerProfileId": {
          "name": "providerProfileId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "licenceNumber": {
          "name": "licenceNumber",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "specialties": {
          "name": "specialties",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "VeterinarianDetails_providerProfileId_key": {
          "name": "VeterinarianDetails_providerProfileId_key",
          "columns": [
            {
              "expression": "providerProfileId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "VeterinarianDetails_providerProfileId_fkey": {
          "name": "VeterinarianDetails_providerProfileId_fkey",
          "tableFrom": "VeterinarianDetails",
          "tableTo": "ProviderProfile",
          "schemaTo": "public",
          "columnsFrom": [
            "providerProfileId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.PsychologistDetails": {
      "name": "PsychologistDetails",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "providerProfileId": {
          "name": "providerProfileId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "licenseNumber": {
          "name": "licenseNumber",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "therapeuticApproaches": {
          "name": "therapeuticApproaches",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "PsychologistDetails_providerProfileId_key": {
          "name": "PsychologistDetails_providerProfileId_key",
          "columns": [
            {
              "expression": "providerProfileId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "PsychologistDetails_providerProfileId_fkey": {
          "name": "PsychologistDetails_providerProfileId_fkey",
          "tableFrom": "PsychologistDetails",
          "tableTo": "ProviderProfile",
          "schemaTo": "public",
          "columnsFrom": [
            "providerProfileId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ClientProfile": {
      "name": "ClientProfile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "ClientProfile_userId_key": {
          "name": "ClientProfile_userId_key",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ClientProfile_userId_fkey": {
          "name": "ClientProfile_userId_fkey",
          "tableFrom": "ClientProfile",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Appointment": {
      "name": "Appointment",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "clientProfileId": {
          "name": "clientProfileId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerServiceId": {
          "name": "providerServiceId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "appointmentTime": {
          "name": "appointmentTime",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "AppointmentStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "priceAtBooking": {
          "name": "priceAtBooking",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "notesForProvider": {
          "name": "notesForProvider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "Appointment_clientProfileId_fkey": {
          "name": "Appointment_clientProfileId_fkey",
          "tableFrom": "Appointment",
          "tableTo": "ClientProfile",
          "schemaTo": "public",
          "columnsFrom": [
            "clientProfileId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Appointment_providerServiceId_fkey": {
          "name": "Appointment_providerServiceId_fkey",
          "tableFrom": "Appointment",
          "tableTo": "ProviderService",
          "schemaTo": "public",
          "columnsFrom": [
            "providerServiceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Review": {
      "name": "Review",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "appointmentId": {
          "name": "appointmentId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "Review_appointmentId_key": {
          "name": "Review_appointmentId_key",
          "columns": [
            {
              "expression": "appointmentId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Review_appointmentId_fkey": {
          "name": "Review_appointmentId_fkey",
          "tableFrom": "Review",
          "tableTo": "Appointment",
          "schemaTo": "public",
          "columnsFrom": [
            "appointmentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ProviderAvailability": {
      "name": "ProviderAvailability",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "providerProfileId": {
          "name": "providerProfileId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "day": {
          "name": "day",
          "type": "DayOfWeek",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "startTime": {
          "name": "startTime",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "endTime": {
          "name": "endTime",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ProviderAvailability_providerProfileId_day_startTime_endTim_key": {
          "name": "ProviderAvailability_providerProfileId_day_startTime_endTim_key",
          "columns": [
            {
              "expression": "providerProfileId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "day",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "startTime",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "endTime",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ProviderAvailability_providerProfileId_fkey": {
          "name": "ProviderAvailability_providerProfileId_fkey",
          "tableFrom": "ProviderAvailability",
          "tableTo": "ProviderProfile",
          "schemaTo": "public",
          "columnsFrom": [
            "providerProfileId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.AppointmentStatus": {
      "name": "AppointmentStatus",
      "values": [
        "PENDING",
        "CONFIRMED",
        "COMPLETED",
        "CANCELLED_BY_CLIENT",
        "CANCELLED_BY_PROVIDER"
      ],
      "schema": "public"
    },
    "public.DayOfWeek": {
      "name": "DayOfWeek",
      "values": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "schema": "public"
    },
    "public.ServicesLocation": {
      "name": "ServicesLocation",
      "values": [
        "PROVIDER_LOCATION",
        "CLIENT_HOME",
        "BOTH"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.geography_columns": {
      "name": "geography_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geography_column": {
          "name": "f_geography_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, postgis_typmod_dims(a.atttypmod) AS coord_dimension, postgis_typmod_srid(a.atttypmod) AS srid, postgis_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE t.typname = 'geography'::name AND a.attisdropped = false AND a.atttypid = t.oid AND a.attrelid = c.oid AND c.relnamespace = n.oid AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    },
    "public.geometry_columns": {
      "name": "geometry_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geometry_column": {
          "name": "f_geometry_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(30)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database()::character varying(256) AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geometry_column, COALESCE(postgis_typmod_dims(a.atttypmod), sn.ndims, 2) AS coord_dimension, COALESCE(NULLIF(postgis_typmod_srid(a.atttypmod), 0), sr.srid, 0) AS srid, replace(replace(COALESCE(NULLIF(upper(postgis_typmod_type(a.atttypmod)), 'GEOMETRY'::text), st.type, 'GEOMETRY'::text), 'ZM'::text, ''::text), 'Z'::text, ''::text)::character varying(30) AS type FROM pg_class c JOIN pg_attribute a ON a.attrelid = c.oid AND NOT a.attisdropped JOIN pg_namespace n ON c.relnamespace = n.oid JOIN pg_type t ON a.atttypid = t.oid LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ''''::text, 2), ')'::text, ''::text) AS type FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%geometrytype(% = %'::text) st ON st.connamespace = n.oid AND st.conrelid = c.oid AND (a.attnum = ANY (st.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text)::integer AS ndims FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%ndims(% = %'::text) sn ON sn.connamespace = n.oid AND sn.conrelid = c.oid AND (a.attnum = ANY (sn.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text), '('::text, ''::text)::integer AS srid FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%srid(% = %'::text) sr ON sr.connamespace = n.oid AND sr.conrelid = c.oid AND (a.attnum = ANY (sr.conkey)) WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT c.relname = 'raster_columns'::name AND t.typname = 'geometry'::name AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "VeterinarianDetails": {
        "columns": {
          "specialties": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      },
      "PsychologistDetails": {
        "columns": {
          "therapeuticApproaches": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}